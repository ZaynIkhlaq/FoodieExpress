import mongoose from 'mongoose';const orderItemSchema = new mongoose.Schema({  menuItem: {    type: mongoose.Schema.Types.ObjectId,    ref: 'MenuItem',    required: true  },  quantity: {    type: Number,    required: true,    min: 1  },  price: {    type: Number,    required: true,    min: 0  },  specialInstructions: {    type: String,    trim: true  }});const orderSchema = new mongoose.Schema({  user: {    type: mongoose.Schema.Types.ObjectId,    ref: 'User',    required: true  },  restaurant: {    type: mongoose.Schema.Types.ObjectId,    ref: 'Restaurant',    required: true  },  items: [orderItemSchema],  subtotal: {    type: Number,    required: true,    min: 0  },  deliveryFee: {    type: Number,    required: true,    min: 0  },  tax: {    type: Number,    required: true,    min: 0  },  total: {    type: Number,    required: true,    min: 0  },  deliveryAddress: {    street: {      type: String,      required: true,      trim: true    },    city: {      type: String,      required: true,      trim: true    },    state: {      type: String,      required: true,      trim: true    },    zipCode: {      type: String,      required: true,      trim: true    }  },  paymentMethod: {    type: String,    required: true,    enum: ['credit_card', 'debit_card', 'paypal', 'cash']  },  status: {    type: String,    required: true,    enum: ['pending', 'processing', 'preparing', 'out_for_delivery', 'delivered', 'cancelled'],    default: 'pending'  },  estimatedDeliveryTime: {    type: Date,    required: true  }}, {  timestamps: true});orderSchema.pre('save', function(next) {  if (this.isModified('items')) {    this.subtotal = this.items.reduce((total, item) => total + (item.price * item.quantity), 0);  }  if (this.isModified('subtotal') || this.isModified('tax') || this.isModified('deliveryFee')) {    this.total = this.subtotal + this.tax + this.deliveryFee;  }  next();});const Order = mongoose.models.Order || mongoose.model('Order', orderSchema);export default Order; 